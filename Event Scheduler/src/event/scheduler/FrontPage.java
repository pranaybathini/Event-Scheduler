/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event.scheduler;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vampire
 */
public class FrontPage extends javax.swing.JFrame {
        
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement  pst = null;
    private String username;
    /**
     * Creates new form FrontPage
     */
    public FrontPage() throws SQLException {
        initComponents();
        LoginPage login = new LoginPage();
       welcome.setText("Welcome " +login.getName());
       username = login.getName();
       summarystatus.setVisible(false);
        conn = Connectivity.connect();
        
        
        
                   int visible =1 ;
                   
                  String query2 = "SELECT * FROM slot WHERE username='"+username+"'";
                  PreparedStatement pst2 = conn.prepareStatement(query2);
                  ResultSet rs2 = pst2.executeQuery();
                   
                  String sb = "<html><body style='text-align: right'>";
                   
                   while(rs2.next())
                   {
                       if(visible==1)
                       summarystatus.setVisible(true);
                       visible = 0;
                       sb = sb +"Venue : "+  rs2.getString("venue")+" "+"date : "+ rs2.getDate(4)+"<br/> <br/>";
                       summary.setText(sb);
                   } 
                    
                   sb = sb + "</html>";
    }
    
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logout = new javax.swing.JButton();
        welcome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        venuebox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        slotbox = new javax.swing.JComboBox<>();
        datechooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        bookstatus = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();
        summarystatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        summary = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 500));
        setResizable(false);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        welcome.setText("Welcome");

        jLabel1.setText("Venues   Avaialble");

        venuebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "venue_1", "venue_2", "venue_3", "venue_4" }));

        jLabel2.setText("Time Slot");

        slotbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8   am    - 10 am", "10 am   - 12 pm", "2    pm  -  4   pm", " 4  pm  -   6   pm" }));

        jLabel3.setText("Select Date");

        bookstatus.setText("Booking");

        confirm.setText("Confirm");
        confirm.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                confirmAncestorResized(evt);
            }
        });
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        summarystatus.setText("Your Bookings");

        summary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        summary.setBorder(null);
        jScrollPane1.setViewportView(summary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(logout)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(summarystatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(venuebox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(slotbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout)
                    .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(venuebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slotbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm))
                .addGap(18, 18, 18)
                .addComponent(summarystatus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        new LoginPage().setVisible(true);
        
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        try
        {
           
            SimpleDateFormat dformat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dformat.format(datechooser.getDate());
            
             //JOptionPane.showMessageDialog(null,datechooser.getDateFormatString());
             
             
             
             
             
             
             
             
             
             
             
           
            
            //Before querying query 1 ,we need to check whether the user is already registered an event or not
             String query1 = "SELECT username,date FROM slot WHERE username='"+username+"' AND "+"date='"+date+"'";
             pst = conn.prepareStatement(query1);
             rs = pst.executeQuery();
             
             if(rs.next())
             {
                 bookstatus.setForeground(Color.red);
                 bookstatus.setText("ALREADY BOOKED");
                 
                 int visible =1 ;
                   
                  String query2 = "SELECT * FROM slot WHERE username='"+username+"'";
                  PreparedStatement pst2 = conn.prepareStatement(query2);
                  ResultSet rs2 = pst2.executeQuery();
                   
                  String sb = "<html><body style='text-align: right'>";
                   
                   while(rs2.next())
                   {
                       if(visible==1)
                       summarystatus.setVisible(true);
                       visible = 0;
                       sb = sb +"Venue : "+  rs2.getString("venue")+" "+"date : "+ rs2.getDate(4)+"<br/> <br/>";
                       summary.setText(sb);
                   } 
                    
                   sb = sb + "</html>";
                 
             }
             else
             {
                   //querying into string ,not to the server
            String query = "insert into slot(username,venue,slot,date) values(?,?,?,?)";
            //now i prepared a statement because i need to take values through run time
            PreparedStatement pst = conn.prepareStatement(query);
            
            
           // pst = conn.prepareStatement(query);
            
            pst.setString(1,username);
            pst.setString(2,venuebox.getSelectedItem().toString());
            pst.setInt(3,(slotbox.getSelectedIndex()+1));
            
            pst.setString(4,date);
            pst.execute();
            pst.close();
            bookstatus.setForeground(Color.green);
            bookstatus.setText("BOOKED");
           // confirm.setEnabled(false);
             }
            /*
            
            jTextField_email.setText("");
            jTextField_phone.setText("");
            jTextField_username.setText("");
            jPasswordField.setText("");
            */
            //Status.setText("Sign Up Successful");
            
            //JOptionPane.showMessageDialog(null,datechooser.getDateFormatString());
            
        }
        catch(Exception e)
        {
           e.printStackTrace();
           // Status.setText("Username Not Available");
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void confirmAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_confirmAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmAncestorResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrontPage().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookstatus;
    private javax.swing.JButton confirm;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> slotbox;
    private javax.swing.JLabel summary;
    private javax.swing.JLabel summarystatus;
    private javax.swing.JComboBox<String> venuebox;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
